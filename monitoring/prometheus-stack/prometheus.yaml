
# PROMETHEUS-OPERATOR
prometheusOperator:
  enabled: true
  serviceMonitor:
    selfMonitor: true

# PROMETHEUS
prometheus:
  enabled: true

  serviceMonitor:
    selfMonitor: true

  ingress:
    enabled: true
    ingressClassName: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod

    hosts:
      - prometheus.ayanides.cloud
    path: "/"
    pathType: Prefix
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.ayanides.cloud


  prometheusSpec:
    enableRemoteWriteReceiver: true

    scrapeInterval: "1m"

    # look for CRD on the whole cluster
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false

#    remoteWrite:
#      - url: "http://mimir-gateway.monitoring/api/v1/push"

    additionalScrapeConfigs:
      - job_name: node-exporter
        relabel_configs:
        - source_labels: [__address__]
          regex: ^(.*):\d+$
          target_label: __address__
          replacement: $1:9100
        - target_label: __scheme__
          replacement: http
        # Host name
        - source_labels: [__meta_kubernetes_node_name]
          target_label: instance
        static_configs:
        - targets: ['eros.ayanides.cloud:9100']

    thanos:
      #blockSize: 1m # only for test
      tracingConfig:
        key: tracing.yml
        name: thanos-tracing-secret
      objectStorageConfig:
        existingSecret:
          key: objstore.yml
          name: thanos-objstore-secret

    tracingConfig:
      client_type: http
      endpoint: otel-collector.monitoring:4318
      insecure: true


  thanosServiceMonitor:
    enabled: true
  thanosService:
    enabled: true
  thanosIngress:
    enabled: false
  thanosServiceExternal:
    enabled: false
