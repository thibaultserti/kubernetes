tempo:

  # resources:
  #   requests:
  #     cpu: 35m
  #     memory: 1739M
  #   limits:
  #     memory: 1739M

  reportingEnabled: false
  metricsGenerator:
    enabled: true
    remoteWriteUrl: "http://vmsingle-vm-stack-victoria-metrics-k8s-stack:8429/api/v1/write"
    processor:
      # Span metrics create metrics based on span type, duration, name and service.
      span_metrics:
        # Configure extra dimensions to add as metric labels.
        dimensions:
          - http.method
          - http.target
          - http.status_code
          - service.version
        filter_policies:
          - include:
              match_type: strict
              attributes:
                - key: http.target
                  value: "*"
                - key: http.status_code
                  value: "*"
      # Service graph metrics create node and edge metrics for determinng service interactions.
      service_graphs:
        # Configure extra dimensions to add as metric labels.
        dimensions:
          - http.method
          - http.target
          - http.status_code
          - service.version

  storage:
    trace:
      backend: s3
      s3:
        bucket: tempo
        endpoint: minio.minio:9000
        access_key:
        secret_key:
        insecure: true

  # this configuration will listen on all ports and protocols that tempo is capable of.
  # the receives all come from the OpenTelemetry collector.  more configuration information can
  # be found there: https://github.com/open-telemetry/opentelemetry-collector/tree/master/receiver
  receivers:
    jaeger:
      protocols:
        grpc:
          endpoint: 0.0.0.0:14250
        thrift_binary:
          endpoint: 0.0.0.0:6832
        thrift_compact:
          endpoint: 0.0.0.0:6831
        thrift_http:
          endpoint: 0.0.0.0:14268
    opencensus:
    zipkin:
      endpoint: "0.0.0.0:9411"
    otlp:
      protocols:
        grpc:
          endpoint: "0.0.0.0:4317"
        http:
          endpoint: "0.0.0.0:4318"


  extraVolumeMounts:
    - mountPath: /mnt/secrets-store
      name: secrets-store-inline

  extraArgs:
    config.expand-env: true
  extraEnv:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: tempo-bucket-secret
          key: S3_TEMPO_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: tempo-bucket-secret
          key: S3_TEMPO_SECRET_ACCESS_KEY

    - name: OTEL_EXPORTER_JAEGER_AGENT_HOST
      value: otel-collector.monitoring
    - name: OTEL_EXPORTER_JAEGER_AGENT_PORT
      value: "4318"


tempoQuery:
  # resources:
  #   requests:
  #     cpu: 11m
  #     memory: 53M
  #   limits:
  #     memory: 53M

  enabled: true

  service:
    port: 16686

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    path: /
    pathType: Prefix
    hosts:
      - tempo.ayanides.cloud


serviceAccount:
  create: true
  name: tempo


serviceMonitor:
  enabled: true


persistence:
  enabled: true
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  size: 10Gi


extraVolumes:
  - name: secrets-store-inline
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: tempo


# @default -- Dynamically generated tempo configmap
config: |
    use_otel_tracer: true
    multitenancy_enabled:
    usage_report:
      reporting_enabled: {{ .Values.tempo.reportingEnabled }}
    compactor:
      compaction:
        block_retention: {{ .Values.tempo.retention }}
    distributor:
      receivers:
        {{- toYaml .Values.tempo.receivers | nindent 4 }}
    ingester:
      {{- toYaml .Values.tempo.ingester | nindent 2 }}
    server:
      {{- toYaml .Values.tempo.server | nindent 2 }}
    storage:
      {{- toYaml .Values.tempo.storage | nindent 2 }}
    querier:
      {{- toYaml .Values.tempo.querier | nindent 2 }}
    query_frontend:
      {{- toYaml .Values.tempo.queryFrontend | nindent 2 }}
    overrides:
      {{- toYaml .Values.tempo.global_overrides | nindent 2 }}
      {{- if .Values.tempo.metricsGenerator.enabled }}
      metrics_generator_processors:
      - 'service-graphs'
      - 'span-metrics'
    metrics_generator:
      storage:
        path: "/tmp/tempo"
        remote_write:
          - url: {{ .Values.tempo.metricsGenerator.remoteWriteUrl }}
      processor:
        {{- toYaml .Values.tempo.metricsGenerator.processor | nindent 4 }}
      {{- end }}
