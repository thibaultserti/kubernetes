existingObjstoreSecret: thanos-objstore-secret

query:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: thanos.ayanides.cloud
    path: "/"
    pathType: Prefix
    tls: true

  replicaLabel:
    - prometheus_replica
    - rule_replica
  dnsDiscovery:
    sidecarsService: prometheus-stack-kube-prom-thanos-discovery
    sidecarsNamespace: monitoring

  extraFlags:
    - |
      --tracing.config=type: OTLP
      config:
        service_name: "thanos-query"
        client_type: http
        endpoint: "otel-collector.monitoring:4318"
        insecure: true

  extraVolumes:
    - name: secrets-store-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: thanos

  extraVolumeMounts:
    - mountPath: /mnt/secrets-store
      name: secrets-store-inline

queryFrontend:
  enabled: true
  extraFlags:
    - |
      --tracing.config=type: OTLP
      config:
        service_name: "thanos-query-frontend"
        client_type: http
        endpoint: "otel-collector.monitoring:4318"
        insecure: true

bucketweb:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: thanos-bucketweb.ayanides.cloud
    path: "/"
    pathType: Prefix
    tls: true
  extraFlags:
    - |
      --tracing.config=type: OTLP
      config:
        service_name: "thanos-bucketweb"
        client_type: http
        endpoint: "otel-collector.monitoring:4318"
        insecure: true

compactor:
  enabled: true
  persistence:
    storageClass: default
    size: 100Gi
  retentionResolutionRaw: 7d
  retentionResolution5m: 30d
  retentionResolution1h: 90d

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: thanos-compactor.ayanides.cloud
    path: "/"
    pathType: Prefix
    tls: true

  extraFlags:
    - |
      --tracing.config=type: OTLP
      config:
        service_name: "thanos-compactor"
        client_type: http
        endpoint: "otel-collector.monitoring:4318"
        insecure: true


storegateway:
  enabled: true
  persistence:
    storageClass: default
    size: 10Gi

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: thanos-storegateway.ayanides.cloud
    path: "/"
    pathType: Prefix
    tls: true

  extraFlags:
    - |
      --tracing.config=type: OTLP
      config:
        service_name: "thanos-storegateway"
        client_type: http
        endpoint: "otel-collector.monitoring:4318"
        insecure: true

ruler:
  enabled: false

receive:
  enabled: false

receiveDistributor:
  enabled: false

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
