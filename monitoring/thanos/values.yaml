objstoreConfig: |
  type: S3
  config:
    bucket: thanos
    endpoint: minio.minio:9000
    insecure: true


query:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: thanos.ayanides.cloud
    path: "/"
    pathType: Prefix
    tls: true

  replicaLabel:
    - prometheus_replica
    - rule_replica
  dnsDiscovery:
    sidecarsService: prometheus-stack-kube-prom-thanos-discovery
    sidecarsNamespace: monitoring

  extraEnvVars:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_SECRET_ACCESS_KEY

  extraVolumes:
    - name: secrets-store-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: thanos

  extraVolumeMounts:
    - mountPath: /mnt/secrets-store
      name: secrets-store-inline

queryFrontend:
  enabled: true
  extraEnvVars:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_SECRET_ACCESS_KEY


bucketweb:
  enabled: true
  extraEnvVars:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_SECRET_ACCESS_KEY


compactor:
  enabled: true
  persistence:
    storageClass: longhorn
    size: 50Gi
  extraEnvVars:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_SECRET_ACCESS_KEY


storegateway:
  enabled: true
  persistence:
    storageClass: longhorn
    size: 50Gi
  extraEnvVars:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: thanos-bucket-secret
          key: S3_THANOS_SECRET_ACCESS_KEY


ruler:
  enabled: false

receive:
  enabled: false

receiveDistributor:
  enabled: false

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
