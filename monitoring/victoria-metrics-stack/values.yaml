# -- If this chart is used in "Argocd" with "releaseName" field then
# -- VMServiceScrapes couldn't select the proper services.
# -- For correct working need set value 'argocdReleaseOverride=$ARGOCD_APP_NAME'
argocdReleaseOverride: "vm-stack"


victoria-metrics-operator:
  enabled: true

  operator:
    disable_prometheus_converter: false
    prometheus_converter_add_argocd_ignore_annotations: true
  serviceMonitor:
    enabled: true

defaultRules:
  create: true
  rules:
    etcd: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubelet: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true
    vmagent: true
    vmsingle: true
    vmcluster: true
    vmhealth: true
    alertmanager: true


defaultDashboardsEnabled: false
experimentalDashboardsEnabled: false


vmsingle:
  enabled: true
  # https://docs.victoriametrics.com/operator/api/#vmsinglespec
  spec:
    retentionPeriod: "30"
    storage:
      storageClassName: "longhorn"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi

  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    path: /
    pathType: Prefix
    hosts:
      - victoriametrics.ayanides.cloud

vmcluster:
  enabled: false

alertmanager:
  enabled: true
  # https://docs.victoriametrics.com/operator/api.html#vmalertmanagerspec
  spec:
    serviceAccountName: "vmalertmanager-vm-stack-victoria-metrics-k8s-stack"
    selectAllByDefault: true
    externalURL: "https://alertmanager.ayanides.cloud/"
    volumeMounts:
      - mountPath: /mnt/secrets-store
        name: secrets-store-inline
    volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: victoria-metrics-alertmanager

  config:
    templates:
      - "/etc/vm/configs/**/*.tmpl"
    route:
      group_by: ["cluster", "alertname", "service"]
      group_interval: 2m
      group_wait: 1m
      repeat_interval: 1h
      # A default receiver
      receiver: alert_manager_critical

      routes:
        - receiver: blackhole
          matchers:
            - alertname=~InfoInhibitor|Watchdog|etcdHighCommitDurations|CPUThrottlingHigh|KubeAPIErrorBudgetBurn
        - receiver: alert_manager_low
          matchers:
            - severity=low
        - receiver: alert_manager_warning
          matchers:
            - severity=~warning|info
        - receiver: alert_manager_critical
          matchers:
            - severity=~critical|incident

    inhibit_rules:
      - source_matchers:
          - severity=~critical|incident
        target_matchers:
          - severity=~warning|info|low
        equal:
          - namespace
          - alertname
      - source_matchers:
          - severity=warning
        target_matchers:
          - severity=~info|low
        equal:
          - namespace
          - alertname
      - source_matchers:
          - severity=low
        target_matchers:
          - severity=info
        equal:
          - namespace
          - alertname
      - source_matchers:
          - alertname=InfoInhibitor
        target_matchers:
          - severity=info
        equal:
          - namespace
          - alertname

    receivers:
      - name: blackhole
      - name: alert_manager_critical
        slack_configs:
          - api_url_file: /mnt/secrets-store/victoria-metrics-alertmanager-url_critical
            send_resolved: true
            title: '{{ template "slack.monzo.title" . }}'
            icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
            color: '{{ template "slack.monzo.color" . }}'
            text: '{{ template "slack.monzo.text" . }}'
            actions:
              - type: button
                text: "Runbook :green_book:"
                url: "{{ (index .Alerts 0).Annotations.runbook_url }}"
              - type: button
                text: "Query :mag:"
                url: "{{ (index .Alerts 0).GeneratorURL }}"
              - type: button
                text: "Dashboard :grafana:"
                url: "{{ (index .Alerts 0).Annotations.dashboard }}"
              - type: button
                text: "Silence :no_bell:"
                url: '{{ template "__alert_silence_link" . }}'
              - type: button
                text: '{{ template "slack.monzo.link_button_text" . }}'
                url: "{{ .CommonAnnotations.link_url }}"
      - name: alert_manager_warning
        slack_configs:
          - api_url_file: /mnt/secrets-store/victoria-metrics-alertmanager-url_warning
            send_resolved: true
            title: '{{ template "slack.monzo.title" . }}'
            icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
            color: '{{ template "slack.monzo.color" . }}'
            text: '{{ template "slack.monzo.text" . }}'
            actions:
              - type: button
                text: "Runbook :green_book:"
                url: "{{ (index .Alerts 0).Annotations.runbook }}"
              - type: button
                text: "Query :mag:"
                url: "{{ (index .Alerts 0).GeneratorURL }}"
              - type: button
                text: "Dashboard :grafana:"
                url: "{{ (index .Alerts 0).Annotations.dashboard }}"
              - type: button
                text: "Silence :no_bell:"
                url: '{{ template "__alert_silence_link" . }}'
              - type: button
                text: '{{ template "slack.monzo.link_button_text" . }}'
                url: "{{ .CommonAnnotations.link_url }}"
      - name: alert_manager_low
        slack_configs:
          - api_url_file: /mnt/secrets-store/victoria-metrics-alertmanager-url_low
            send_resolved: true
            title: '{{ template "slack.monzo.title" . }}'
            icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
            color: '{{ template "slack.monzo.color" . }}'
            text: '{{ template "slack.monzo.text" . }}'
            actions:
              - type: button
                text: "Runbook :green_book:"
                url: "{{ (index .Alerts 0).Annotations.runbook }}"
              - type: button
                text: "Query :mag:"
                url: "{{ (index .Alerts 0).GeneratorURL }}"
              - type: button
                text: "Dashboard :grafana:"
                url: "{{ (index .Alerts 0).Annotations.dashboard }}"
              - type: button
                text: "Silence :no_bell:"
                url: '{{ template "__alert_silence_link" . }}'
              - type: button
                text: '{{ template "slack.monzo.link_button_text" . }}'
                url: "{{ .CommonAnnotations.link_url }}"

  monzoTemplate:
    enabled: true

  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    path: /
    pathType: Prefix
    hosts:
      - alertmanager.ayanides.cloud


vmalert:
  enabled: true
  spec:
    selectAllByDefault: true
    notifiers:
      - url: http://vmalertmanager-vm-stack-victoria-metrics-k8s-stack.monitoring.svc:9093
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    path: /
    pathType: Prefix

    hosts:
      - vmalert.ayanides.cloud

vmagent:
  enabled: true
  cadvisor: true
  probes: true
  spec:
    externalLabels:
      cluster: belt
    scrapeInterval: 30s
    selectAllByDefault: true
    inlineScrapeConfig: |
      - job_name: node-exporter
        relabel_configs:
        - source_labels: [__address__]
          regex: ^(.*):\d+$
          target_label: __address__
          replacement: $1:9100
        - target_label: __scheme__
          replacement: http
        # Host name
        - source_labels: [__meta_kubernetes_node_name]
          target_label: instance
        static_configs:
        - targets: ['eros.ayanides.cloud:9100']

  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    path: /
    pathType: Prefix
    hosts:
      - vmagent.ayanides.cloud



grafana:
  enabled: false

prometheus-node-exporter:
  enabled: false

kube-state-metrics:
  enabled: false

#################################################
###              Service Monitors           #####
#################################################
## Component scraping the kubelets
kubelet:
  enabled: true
  spec:
    metricRelabelConfigs:
        # Drop less useful container CPU metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
      # Drop less useful container / always zero filesystem metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
      # Drop less useful / always zero container memory metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_memory_(mapped_file|swap)'
      # Drop less useful container process metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_(file_descriptors|tasks_state|threads_max)'
      # Drop container spec metrics that overlap with kube-state-metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_spec.*'
      # Drop cgroup metrics with no pod.
      - sourceLabels: [id, pod]
        action: drop
        regex: '.+;'
      - action: labeldrop
        regex: id
# -- Component scraping the kube api server
kubeApiServer:
  enabled: true

# -- Component scraping the kube controller manager
kubeControllerManager:
  enabled: true

  spec:
    jobLabel: jobLabel
    endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        port: http-metrics
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecureSkipVerify: true

# -Component scraping kubeDns. Use either this or coreDns
kubeDns:
  enabled: false

# -- Component scraping coreDns. Use either this or kubeDns
coreDns:
  enabled: true

## Component scraping etcd
##
kubeEtcd:
  enabled: true
  service:
    enabled: true
    port: 2381
    targetPort: 2381

  # https://docs.victoriametrics.com/operator/api.html#vmservicescrapespec
  spec:
    jobLabel: jobLabel
    endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        port: http-metrics


## Component scraping kube scheduler
##
kubeScheduler:
  enabled: true
  spec:
    jobLabel: jobLabel
    endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        port: http-metrics
        scheme: https
        tlsConfig:
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecureSkipVerify: true

## Component scraping kube proxy
##
kubeProxy:
  enabled: true

  spec:
    jobLabel: jobLabel
    endpoints:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        port: http-metrics

## install vm operator crds
crds:
  enabled: true
