# GLOBAL
global:
  logging:
    format: text
    level: info


# CONFIGS

configs:
  cm:
    admin.enabled: true
    exec.enabled: true
    server.rbac.log.enforce.enable: false
    # Hide Kyverno Policy in Argo CD UI
    resource.exclusions: |
      - apiGroups:
          - kyverno.io
        kinds:
          - AdmissionReport
          - BackgroundScanReport
          - ClusterAdmissionReport
          - ClusterBackgroundScanReport
        clusters:
          - '*'
      - apiGroups:
        - "*"
        kinds:
        - VMServiceScrape
        - VMPodScrape
        - VMRule
    resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
      jqPathExpressions:
      - '.webhooks[]?.clientConfig.caBundle'
    resource.customizations.ignoreDifferences.admissionregistration.k8s.io_ValidatingWebhookConfiguration: |
      jqPathExpressions:
      - '.webhooks[]?.clientConfig.caBundle'
    resource.customizations.ignoreDifferences.apps_Deployment: |
      jqPathExpressions:
        - '.spec.revisionHistoryLimit'
    resource.customizations.ignoreDifferences.apps_StatefulSet: |
      jqPathExpressions:
        - '.spec.revisionHistoryLimit'
    resource.customizations.ignoreDifferences.apps_DaemonSet: |
      jqPathExpressions:
        - '.spec.revisionHistoryLimit'

  params:
    otlp.address: "otel-collector.monitoring:4317"
    server.insecure: true

  rbac:
    policy.default: ""
    policy.csv: ""
    scopes: "[groups]"

  ssh:
    extraHosts: ""


  secret:
    # htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/
    argocdServerAdminPassword: "$2a$10$tCwP269.mLFpDZjhXqtRt.0038jDzPAoLX8Hkj33idrfC0se9Ab9a"

# CONTROLLER

controller:
  # resources:
  #   requests:
  #     cpu: 671m
  #     memory: 2540M
  #   limits:
  #     memory: 2540M

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    rules:
      enabled: true
      spec:
        - alert: ArgoAppMissing
          expr: |
            absent(argocd_app_info) == 1
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: "[Argo CD] No reported applications"
            description: >
              Argo CD has not reported any applications data for the past 15 minutes which
              means that it must be down or not functioning properly.  This needs to be
              resolved for this cloud to continue to maintain state.
        - alert: ArgoAppNotSynced
          expr: |
            argocd_app_info{sync_status!="Synced"} == 1
          for: 12h
          labels:
            severity: warning
          annotations:
            summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
            description: >
              The application [{{`{{$labels.name}}`}} has not been synchronized for over
              12 hours which means that the state of this cloud has drifted away from the
              state inside Git.

# DEX
dex:
  enabled: false
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

# REDIS

redis:
  resources:
    # requests:
    #   cpu: 11m
    #   memory: 53M
    # limits:
    #   memory: 53M

  exporter:
    enabled: true
    # resources:
    #   requests:
    #     cpu: 11m
    #     memory: 53M
    #   limits:
    #     memory: 53M
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# SERVER

server:
  # resources:
  #   requests:
  #     cpu: 15m
  #     memory: 127M
  #   limits:
  #     memory: 127M

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

  ingress:
    enabled: true
    ingressClassName: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: GitOps on Kubernetes
      gethomepage.dev/group: Deployment
      gethomepage.dev/icon: argocd.png
      gethomepage.dev/name: ArgoCD
      gethomepage.dev/weight: "10"
    hosts:
      - argocd.ayanides.cloud
    paths:
      - /
    pathType: Prefix
    https: false

# REPOSERVER

repoServer:
  # resources:
  #   requests:
  #     cpu: 63m
  #     memory: 1024Mi
  #   limits:
  #     cpu: 63m


  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# APPLICATIONSET

applicationSet:
  # resources:
  #   requests:
  #     cpu: 15m
  #     memory: 105M
  #   limits:
  #     memory: 105M

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# NOTIFICATIONS

notifications:
  # resources:
  #   requests:
  #     cpu: 15m
  #     memory: 105M
  #   limits:
  #     memory: 105M

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

  extraVolumeMounts:
    - mountPath: /mnt/secrets-store
      name: secrets-store-inline
  extraVolumes:
    - name: secrets-store-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: argocd-notifications-controller
  secret:
    create: false

  argocdUrl: https://argocd.ayanides.cloud

  notifiers:
    service.webhook.discord: |
      url: $discord-url
      headers:
        - name: Content-Type
          value: application/json
    service.grafana: |
      apiUrl: $grafana-url
      apiKey: $grafana-api-key
  subscriptions:
    - recipients:
        - discord:argocd
      triggers:
        - on-health-degraded
        - on-sync-failed
        - on-sync-status-unknown
        - on-deployed
    - recipients:
        - grafana:argocd
      triggers:
        - on-deployed
        - on-health-degraded
        - on-sync-failed
        # - on-sync-running
        # - on-sync-succeeded
        # - on-sync-status-unknown
  triggers:
    trigger.on-deployed: |
      - description: Application is synced and healthy. Triggered once per commit.
        oncePer: app.status.sync.revision
        send:
        - app-deployed
        when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
    trigger.on-health-degraded: |
      - description: Application has degraded
        send:
        - app-health-degraded
        when: app.status.health.status == 'Degraded' and time.Now().Sub(time.Parse(app.status.operationState.startedAt)).Minutes() >= 5
    trigger.on-sync-failed: |
      - description: Application syncing has failed
        send:
        - app-sync-failed
        when: app.status.operationState.phase in ['Error', 'Failed'] and time.Now().Sub(time.Parse(app.status.operationState.startedAt)).Minutes() >= 5
    trigger.on-sync-running: |
      - description: Application is being synced
        send:
        - app-sync-running
        when: app.status.operationState.phase in ['Running']
    trigger.on-sync-status-unknown: |
      - description: Application status is 'Unknown'
        send:
        - app-sync-status-unknown
        when: app.status.sync.status == 'Unknown' and time.Now().Sub(time.Parse(app.status.operationState.startedAt)).Minutes() >= 5
    trigger.on-sync-succeeded: |
      - description: Application syncing has succeeded
        send:
        - app-sync-succeeded
        when: app.status.operationState.phase in ['Succeeded']

  templates:
    template.app-health-degraded: |
      message: |
        Application {{.app.metadata.name}} has degraded.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      webhook:
        discord:
          method: POST
          body: |
            {
            "text": ":exclamation: Application {{.app.metadata.name}} has degraded. Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.",
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#f4c030",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-sync-failed: |
      message: |
        The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true.
      webhook:
        discord:
          method: POST
          body: |
            {
            "text": ":exclamation: The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}. Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true.",
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#E96D76",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-sync-status-unknown: |
      message: |
        Application {{.app.metadata.name}} sync is 'Unknown'.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      webhook:
        discord:
          method: POST
          body: |
            {
            "text": ":exclamation: Application {{.app.metadata.name}} sync is 'Unknown'. Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.",
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#E96D76",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-sync-running: |
      message: |
        The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true.
      webhook:
        discord:
          method: POST
          body: |
            {
            "text": "The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}. Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true.",
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#0DADEA",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-deployed: |
      message: |
        Application {{.app.metadata.name}} is now running new version of deployments manifests.
      webhook:
        discord:
          method: POST
          body: |
            {
            "text": ":white_check_mark: Application {{.app.metadata.name}} is now running new version of deployments manifests."
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#18be52",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                },
                {
                  "title": "Revision",
                  "value": "{{.app.status.sync.revision}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-sync-succeeded: |
      message: |
        Application has been successfully synced at {{.app.status.operationState.finishedAt}}.
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true.
      webhook:
        discord:
          method: POST
          body: |
            {
            "text": ":white_check_mark: Application has been successfully synced at {{.app.status.operationState.finishedAt}}. Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true.",
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#18be52",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
