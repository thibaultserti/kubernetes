# GLOBAL
global:
  logging:
    format: text
    level: info


# CONFIGS

configs:
  cm:
    admin.enabled: true
    exec.enabled: true
    server.rbac.log.enforce.enable: false
    #dex.config
    #oidc.config

  params:
    otlp.adress: ""
    server.insecure: true

  rbac:
    policy.default: ""
    policy.csv: ""
    scopes: "[groups]"

  ssh:
    extraHosts: ""


  secret:
    # htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/
    argocdServerAdminPassword: "$2a$10$tCwP269.mLFpDZjhXqtRt.0038jDzPAoLX8Hkj33idrfC0se9Ab9a"

# CONTROLLER

controller:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false #true
    rules:
      enabled: false #true

# DEX

dex:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false #true

# REDIS

redis:
  exporter:
    enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false #true

# SERVER

server:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false #true
  ingress:
    enabled: true
    ingressClassName: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - argocd.ayanides.cloud
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: argocd-tls
        hosts:
          - argocd.ayanides.cloud
    https: false

# REPOSERVER

repoServer:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false #true

# APPLICATIONSET

applicationSet:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false #true

# NOTIFICATIONS

notifications:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

  extraVolumeMounts:
    - mountPath: /mnt/secrets-store
      name: secrets-store-inline
  extraVolumes:
    - name: secrets-store-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: argocd-notifications-controller
  secret:
    create: false

  argocdUrl: https://argocd.ayanides.cloud

  notifiers:
    service.webhook.discord: |
      url: $discord-url
      headers:
        - name: Content-Type
          value: application/json
  subscriptions:
    - recipients:
        - discord:argocd
      triggers:
        - on-health-degraded
        - on-sync-failed
        - on-sync-status-unknown
  triggers:
    trigger.on-deployed: |
      - description: Application is synced and healthy. Triggered once per commit.
        oncePer: app.status.sync.revision
        send:
        - app-deployed
        when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
    trigger.on-health-degraded: |
      - description: Application has degraded
        send:
        - app-health-degraded
        when: app.status.health.status == 'Degraded'
    trigger.on-sync-failed: |
      - description: Application syncing has failed
        send:
        - app-sync-failed
        when: app.status.operationState.phase in ['Error', 'Failed']
    trigger.on-sync-running: |
      - description: Application is being synced
        send:
        - app-sync-running
        when: app.status.operationState.phase in ['Running']
    trigger.on-sync-status-unknown: |
      - description: Application status is 'Unknown'
        send:
        - app-sync-status-unknown
        when: app.status.sync.status == 'Unknown'
    trigger.on-sync-succeeded: |
      - description: Application syncing has succeeded
        send:
        - app-sync-succeeded
        when: app.status.operationState.phase in ['Succeeded']

  templates:
    template.app-health-degraded: |
      message: |
        :exclamation: Application {{.app.metadata.name}} has degraded.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      webhook:
        discord:
          method: POST
          body: |
            {
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#f4c030",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-sync-failed: |
      message: |
        :exclamation:  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      webhook:
        discord:
          method: POST
          body: |
            {
            "attachments:"
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#E96D76",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-sync-status-unknown: |
      message: |
        :exclamation: Application {{.app.metadata.name}} sync is 'Unknown'.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      webhook:
        discord:
          method: POST
          body: |
            {
            "attachments:"
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#E96D76",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }
    template.app-sync-running: |
      message: |
        The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      webhook:
        discord:
          method: POST
          body: |
            {
            "attachments":
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#0DADEA",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            }