global:
  serverTelemetry:
    prometheusOperator: true

injector:
  enabled: false
  metrics:
    enabled: true


server:
  # resources:
  #   requests:
  #     cpu: 49m
  #     memory: 226M
  #   limits:
  #     memory: 226M
  dataStorage:
    enabled: true
    storageClass: "longhorn"

  auditStorage:
    enabled: true
    storageClass: longhorn

  ingress:
    enabled: true
    ingressClassName: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Secret Management tool
      gethomepage.dev/group: Security
      gethomepage.dev/icon: vault.png
      gethomepage.dev/name: Vault
      gethomepage.dev/weight: "10"
    hosts:
      - host: vault.ayanides.cloud
        paths:
          - /
    pathType: Prefix

  # extraContainers:
  #   - name: get-gcp-sa
  #     image: curlimages/curl:latest
  #     volumeMounts:
  #     - name: gcp
  #       mountPath: /tmp/gcp

  extraEnvironmentVars:
    GOOGLE_REGION: europe-west1
    GOOGLE_PROJECT: infra-390806
    GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp/creds.json

  volumes:
    - name: gcp
      secret:
        secretName: gcp

  volumeMounts:
    - name: gcp
      readOnly: true
      mountPath: "/tmp/gcp"

  standalone:
    enabled: "true"

    # Note: Configuration files are stored in ConfigMaps so sensitive data
    # such as passwords should be either mounted through extraSecretEnvironmentVars
    # or through a Kube secret.  For more information see:
    # https://www.vaultproject.io/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations
    config: |
      ui = true

      listener "tcp" {
        tls_disable = 1
        address = "[::]:8200"
        cluster_address = "[::]:8201"
        # Enable unauthenticated metrics access (necessary for Prometheus Operator)
        telemetry {
          unauthenticated_metrics_access = "true"
        }
      }
      storage "file" {
        path = "/vault/data"
      }


      # # Example configuration for using auto-unseal, using Google Cloud KMS. The
      # # GKMS keys must already exist, and the cluster must have a service account
      # # that is authorized to access GCP KMS.
      seal "gcpckms" {
        key_ring    = "auto-unseal"
        crypto_key  = "auto-unseal-key"
      }

      # Example configuration for enabling Prometheus metrics in your config.
      telemetry {
       prometheus_retention_time = "24h"
       disable_hostname = true
      }


# Vault UI
ui:
  enabled: true

# secrets-store-csi-driver-provider-vault
csi:
  enabled: true
  # resources:
  #   requests:
  #     cpu: 11m
  #     memory: 53M
  #   limits:
  #     memory: 53M

serverTelemetry:
  serviceMonitor:
    enabled: true
  prometheusRules:
      enabled: true
      rules:
       - alert: vault-HighResponseTime
         annotations:
           message: The response time of Vault is over 500ms on average over the last 5 minutes.
         expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 500
         for: 5m
         labels:
           severity: warning
       - alert: vault-HighResponseTime
         annotations:
           message: The response time of Vault is over 1s on average over the last 5 minutes.
         expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 1000
         for: 5m
         labels:
           severity: critical