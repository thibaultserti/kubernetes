serviceAccount:
  create: true
  name: kured

extraEnvVars:
  - name: KURED_NOTIFY_URL
    valueFrom:
      secretKeyRef:
        name: kured
        key: discord_url


volumeMounts:
- mountPath: /mnt/secrets-store
  name: secrets-store-inline

volumes:
  - name: secrets-store-inline
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
          secretProviderClass: kured


configuration:
  useRebootSentinelHostPath: true  # not actually a flag, indicates if the sentinel should be mounted
  metricsHost: "0.0.0.0"               # host where metrics will listen
  metricsPort: 8080             # port number where metrics will listen
  alertFiringOnly: true        # only consider firing alerts when checking for active alerts
  startTime: "0:00"                 # only reboot after this time of day (default "0:00")
  endTime: "23:00"                   # only reboot before this time of day (default "23:59")
  forceReboot: true            # force a reboot even if the drain fails or times out (default: false)
  prometheusUrl: "http://vmsingle-vm-stack-victoria-metrics-k8s-stack.monitoring.svc:8429"             # Prometheus instance to probe for active alerts
  rebootDays: [mo,tu,we,th,fr]                # only reboot on these days (default [su,mo,tu,we,th,fr,sa])
  rebootSentinel: "/var/run/reboot-required"  # path to file whose existence signals need to reboot (default "/var/run/reboot-required")
  rebootCommand: "/bin/systemctl reboot"  # command to run when a reboot is required by the sentinel
  annotateNodes: true          # enable 'weave.works/kured-reboot-in-progress' and 'weave.works/kured-most-recent-reboot-needed' node annotations to signify kured reboot operations
  preferNoScheduleTaint: "weave.works/kured-node-reboot"    # Taint name applied during pending node reboot (to prevent receiving additional pods from other rebooting nodes). Disabled by default. Set e.g. to  to enable tainting.
  logFormat: "json"             # log format specified as text or json, defaults to text
  concurrency: 1                # amount of nodes to concurrently reboot. (default 1)


metrics:
  create: true
  namespace: ""
  labels: {}
  interval: 60s
  scrapeTimeout: ""

service:
  create: true
  port: 8080
  annotations: {}
  name: ""
  type: ClusterIP
