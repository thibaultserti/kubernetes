cluster:
  name: belt


hubble:
  enabled: true
  metrics:
    enabled:
      # - dns:query;ignoreAAAA
      # - drop
      # - tcp
      # - flow
      # - icmp
      # - http
      # - policy:sourceContext=app|workload-name|pod|reserved-identity;destinationContext=app|workload-name|pod|dns|reserved-identity;labelsContext=source_namespace,destination_namespace
      # - flow:sourceContext=workload-name|reserved-identity;destinationContext=workload-name|reserved-identity
      # - kafka:labelsContext=source_namespace,source_workload,destination_namespace,destination_workload,traffic_direction;sourceContext=workload-name|reserved-identity;destinationContext=workload-name|reserved-identity
      # - httpV2:exemplars=true;labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction;sourceContext=workload-name|reserved-identity;destinationContext=workload-name|reserved-identity
    enableOpenMetrics: false
    serviceMonitor:
      enabled: true

  tls:
    enabled: false

  relay:
    enabled: true
    prometheus:
      enabled: false
      port: 9966
      serviceMonitor:
        enabled: true

  ui:
    enabled: true
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
      className: "traefik"
      hosts:
        - hubble.ayanides.cloud
      tls:
        - secretName: hubble-tls
          hosts:
            - hubble.ayanides.cloud


# -- Configure prometheus metrics on the configured port at /metrics
prometheus:
  enabled: false
  serviceMonitor:
    enabled: true



operator:
  enabled: true
  prometheus:
    enabled: false
    serviceMonitor:
      enabled: true
